{"version":3,"file":"play_game.js","mappings":";;;;;;;;;;;;;;AAAA,iEAAe,qBAAuB,iDAAiD;;;;;;;;;;;;;;;ACAlD;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,sCAAsC;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,+CAA+C;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,SAAS;AACT;AACA;AACA;;;AAGA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACrFA;AACA;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5BkD;AACrB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB,+DAAG;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ,wCAAG;AACX,QAAQ,wCAAG;AACX,QAAQ,wCAAG;AACX,QAAQ,wCAAG;AACX;AACA,YAAY,wCAAG;AACf,YAAY,wCAAG;AACf,YAAY,wCAAG;AACf,UAAU;AACV,YAAY,wCAAG;AACf,YAAY,wCAAG;AACf,YAAY,wCAAG;;AAEf,YAAY,wCAAG;AACf,YAAY,wCAAG;AACf,YAAY,wCAAG;AACf,YAAY,wCAAG;AACf,YAAY,wCAAG;AACf;;AAEA,QAAQ,wCAAG;;AAEX;AACA;;;;;;;;UCnDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;;AClB4B;AACF;AACgB;AACV;;AAEhC;;AAEA;AACA,gBAAgB,qCAAG,CAAC,gDAAW,EAAE,wCAAG;;;AAGpC,iBAAiB,2CAAM;AACvB,iBAAiB,2CAAM;;AAEvB;AACA;;;AAGA;AACA,sBAAsB,uCAAI;AAC1B,sBAAsB,uCAAI;;AAE1B,sBAAsB,uCAAI;AAC1B,sBAAsB,uCAAI;;AAE1B;;AAEA,CAAC,C","sources":["webpack://simple-strategy-pack/./simple_strategy/src/units/buildman.png","webpack://simple-strategy-pack/./simple_strategy/static/simple_strategy/js/app.js","webpack://simple-strategy-pack/./simple_strategy/static/simple_strategy/js/canvas.js","webpack://simple-strategy-pack/./simple_strategy/static/simple_strategy/js/player.js","webpack://simple-strategy-pack/./simple_strategy/static/simple_strategy/js/unit.js","webpack://simple-strategy-pack/webpack/bootstrap","webpack://simple-strategy-pack/webpack/runtime/define property getters","webpack://simple-strategy-pack/webpack/runtime/global","webpack://simple-strategy-pack/webpack/runtime/hasOwnProperty shorthand","webpack://simple-strategy-pack/webpack/runtime/make namespace object","webpack://simple-strategy-pack/webpack/runtime/publicPath","webpack://simple-strategy-pack/./simple_strategy/static/simple_strategy/js/main.js"],"sourcesContent":["export default __webpack_public_path__ + \"dirname/7e10b486d4f12085211a025279a80b07.png\";","import {game_canvas} from \"./canvas\";\n\nclass App {\n    constructor(canvas_elem, ctx, players, dashboard_elem) {\n        this.canvas_elem = canvas_elem;\n        this.ctx = ctx;\n        this.dashboard_elem = dashboard_elem;\n        this.btn_next_player = document.getElementById('btn_next_player');\n        this.btn_next_player.addEventListener('click', () => {\n            let cur_idx = this.players.indexOf(this.current_player)\n            cur_idx++;\n            if (cur_idx === this.players.length) {\n                this.set_current_player(0);\n            } else {\n                this.set_current_player(cur_idx)\n            }\n        })\n\n        this.canvas_elem.addEventListener('click', (evt) => {\n            evt.preventDefault()\n            let x = evt.offsetX\n            let y = evt.offsetY\n            let is_selection_process = false\n\n            for (let j = 0, cu; j < this.current_player.units.length; j++) {\n                cu = this.current_player.units[j]\n\n                if (Math.sqrt((x - cu.cx) ** 2 + (y - cu.cy) ** 2) <= cu.r) {\n                    this.current_player.toggle_unit_selection(cu)\n                    is_selection_process = true\n                    break\n                }\n            }\n            if (!is_selection_process) {\n                for (let j = 0, cu, step, remain; j < this.current_player.selected_units.length; j++) {\n                    cu = this.current_player.selected_units[j]\n                    step = Math.sqrt((x - cu.cx) ** 2 + (y - cu.cy) ** 2)\n                    remain = cu.step_scores - step\n                    if (remain > 0) {\n                        cu.cx = x\n                        cu.x = cu.cx - cu.w / 2\n                        cu.cy = y\n                        cu.y = cu.cy - cu.h / 2\n                        cu.step_scores = remain\n                    }\n\n                }\n            }\n            this.redraw()\n\n\n        })\n        this.players = players;\n        this.current_player;\n        this.canvas_elem.addEventListener('mousemove', (evt) => {\n\n\n        })\n    }\n\n    set_players(players) {\n        this.players = players;\n    }\n\n    set_current_player(idx) {\n        if (this.current_player !== undefined) this.current_player.deselect_all();\n        this.current_player = this.players[idx]\n        this.redraw()\n    }\n\n    redraw() {\n        this.ctx.clearRect(0, 0, 500, 500);\n        this.dashboard_elem.innerText = this.current_player.title\n        for (let i = 0, cp; i < this.players.length; i++) {\n            cp = this.players[i]\n            for (let j = 0, cu; j < cp.units.length; j++) {\n                cu = cp.units[j]\n                cu.draw()\n                if (this.current_player.selected_units.indexOf(cu) !== -1) {\n                    this.dashboard_elem.innerText += ` ${cu.step_scores}`\n                }\n            }\n        }\n\n    }\n}\n\nexport {\n    App\n}","const game_canvas = document.getElementById('game_canvas');\nconst ctx = game_canvas.getContext('2d');\n\n\n\nexport{\n    game_canvas,\n    ctx\n}","class Player{\n    constructor(app, title, color, data){\n        this.app = app;\n        this.title = title;\n        this.color = color;\n        this.data = data;\n        this.step_scores = 100;\n        this.step_scores_max = 100;\n        this.units = [];\n        this.selected_units = []\n    }\n    add_unit(unit){\n        this.units.push(unit)\n    }\n    toggle_unit_selection(unit){\n        let idx = this.selected_units.indexOf(unit)\n        if(idx!==-1){\n            console.log('deselect')\n            this.selected_units.splice(idx, 1)\n        }else{\n            console.log('select')\n            this.selected_units.push(unit)\n        }\n    }\n    deselect_all(){\n        this.selected_units = []\n        this.app.redraw()\n    }\n}\n\nexport{\n    Player\n}","import png from \"../../../src/units/buildman.png\";\nimport {ctx} from \"./canvas\";\n\nclass Unit {\n    constructor(x, y, player) {\n        this.player = player;\n        this.x = x;\n        this.y = y;\n        this.r = 25;\n        this.step_scores = 100;\n        this.step_scores_max = 100;\n\n        this.image = new Image(50, 50);\n        this.w = this.image.width;\n        this.h = this.image.height;\n        this.cx = this.x + this.w / 2;\n        this.cy = this.y + this.h / 2;\n        this.image.addEventListener('load', () => {\n            this.draw()\n        })\n        this.image.src = png;\n    }\n\n    set_player(player) {\n        this.player = player;\n    }\n\n    draw() {\n        ctx.beginPath();\n        ctx.arc(this.cx, this.cy, this.r, 0, 2 * Math.PI);\n        ctx.fillStyle = this.player.color;\n        ctx.fill();\n        if (this.player.selected_units.indexOf(this) === -1) {\n            ctx.strokeStyle = '#EEEEEE'\n            ctx.stroke();\n            ctx.closePath();\n        } else {\n            ctx.strokeStyle = '#FF4400'\n            ctx.stroke();\n            ctx.closePath();\n\n            ctx.beginPath();\n            ctx.arc(this.cx, this.cy, this.step_scores, 0, 2 * Math.PI);\n            ctx.strokeStyle = '#EEEEEE'\n            ctx.stroke();\n            ctx.closePath();\n        }\n\n        ctx.drawImage(this.image, this.x, this.y, this.w, this.h);\n\n    }\n}\n\nexport {\n    Unit\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import {Unit} from \"./unit\";\nimport {App} from \"./app\";\nimport {ctx, game_canvas} from \"./canvas\";\nimport {Player} from \"./player\";\n\nlet chosen_unit;\n\nconst dashboard = document.getElementById('dashboard');\nconst app = new App(game_canvas, ctx,[], dashboard);\n\n\nconst pl_1 = new Player(app, 'Player 1', '#ffcccc')\nconst pl_2 = new Player(app, 'Player 2', '#ccccff')\n\napp.set_players([pl_1, pl_2]);\nconsole.log(app)\n\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    pl_1.add_unit(new Unit(100, 100, pl_1));\n    pl_1.add_unit(new Unit(200, 100, pl_1));\n\n    pl_2.add_unit(new Unit(100, 200, pl_2));\n    pl_2.add_unit(new Unit(200, 200, pl_2));\n\n    app.set_current_player(0)\n\n})"],"names":[],"sourceRoot":""}